<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>users on DHQwords</title><link>https://rlskoeser.github.io/dhqwords/categories/users/</link><description>Recent content in users on DHQwords</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cdh-info@princeton.edu</managingEditor><webMaster>cdh-info@princeton.edu</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NoDerivatives 4.0 International License.</copyright><lastBuildDate>Thu, 20 Jul 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://rlskoeser.github.io/dhqwords/categories/users/index.xml" rel="self" type="application/rss+xml"/><item><title>BASIC FTBALL and Computer Programming for All</title><link>https://rlskoeser.github.io/dhqwords/vol/17/2/000696/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><author>Annette Vee</author><guid>https://rlskoeser.github.io/dhqwords/vol/17/2/000696/</guid><description>In late fall 1965, John Kemeny wrote a 239-line BASIC program called FTBALL***. Along with his colleague Thomas Kurtz and a few work-study students at Dartmouth College, Kemeny had developed the BASIC programming language and Dartmouth Time-Sharing System (DTSS), both of which went live on May 1, 1964. BASIC and DTSS represented perhaps the earliest successful attempt at programming for all, combining English-language vocabulary (e.g.,
HELLO instead of
LOGON ), simple yet robust instructions, and near-realtime access to a mainframe computer.</description></item><item><title>Reverse Engineering the Gendered Design of Amazon’s Alexa: Methods in Testing Closed-Source Code in Grey and Black Box Systems</title><link>https://rlskoeser.github.io/dhqwords/vol/17/2/000700/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><author>Lai-Tze Fan</author><guid>https://rlskoeser.github.io/dhqwords/vol/17/2/000700/</guid><description>30 years ago these sayings were cliché, today they are offenisve [sic]. Demeaning, limiting, or belittling a woman’s contribution to a household is not quaint or cute. Prolonging or promoting sexists tropes is wrong. Maybe write a skill called Sexist Spouse. Please do better humans.
—customer review for the Amazon Alexa skill “Happy Wife”
This article examines the gendered design of Amazon Alexa’s voice-driven capabilities, or, skills, in order to better understand how Alexa, as an AI assistant, mirrors traditionally feminized labour and sociocultural expectations.</description></item><item><title>ᐊᒐᐦᑭᐯᐦᐃᑲᓇ ᒫᒥᑐᓀᔨᐦᐃᒋᑲᓂᐦᑳᓂᕽ | acahkipehikana mâmitoneyihicikanihkânihk | Programming with Cree# and Ancestral Code: Nehiyawewin Spirit Markings in an Artificial Brain</title><link>https://rlskoeser.github.io/dhqwords/vol/17/2/000699/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><author>Jon Corbett</author><guid>https://rlskoeser.github.io/dhqwords/vol/17/2/000699/</guid><description>Introduction Nohkompan,1 my paternal grandmother, was Nehiyaw (Cree) and Saulteaux (Chippewa). After her passing and understanding the matriarchal nature of many Cree peoples, I found myself looking at the Nehiyaw culture of her mother, Nitâpân ,2 for inspiration for my creative works. In 2014, I attempted to use Nehiyawewin (the Cree language) words as variables using the Unified Canadian Aboriginal Syllabics 3. My early attempts were instantly problematic because the development environments (IDEs) I used would render the syllabics, like ᑖ, as empty boxes ⌧.</description></item><item><title>The Explainability Turn</title><link>https://rlskoeser.github.io/dhqwords/vol/17/2/000685/</link><pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate><author>David M. Berry</author><guid>https://rlskoeser.github.io/dhqwords/vol/17/2/000685/</guid><description>Introduction How can we know what our computational infrastructures are doing to us? More to the point, how can we trust that algorithms and related technologies do not have a detrimental effect? As technologies make up more of our digital environment, they not only provide tools for thought, but they also shape and direct the very way we think. The move from relying on books to understand a topic to using the internet to research a topic is profoundly different, not only in terms of the acceleration in access to information, but also in the reliance on surfing and searching for information.</description></item><item><title>Radically Accessible Shakespeare: Cripping the Digital Shakespeare Canon through Universal Design and Disability Studies</title><link>https://rlskoeser.github.io/dhqwords/vol/17/1/000659/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><author>Christine M. Gottlieb</author><guid>https://rlskoeser.github.io/dhqwords/vol/17/1/000659/</guid><description>Introduction The internet has vastly expanded access to Shakespeare resources and has led to the proliferation of born-digital Shakespeareana. Shakespeare exists online in archival materials, digital texts, apps, films, recordings of theatrical performances, YouTube videos, and other digital media. Shakespeare has enough of a digital presence to justify considering online Shakespeare a subset of the Digital Humanities field 1. Articles in DHQ testify to the innovations of Digital Humanities projects focused on Shakespeare and early modern studies (2; 3; 4; 5; 6; 7).</description></item></channel></rss>